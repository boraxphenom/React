{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","classname","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAiBeA,EAdA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,8BACI,qBAAKC,UAAU,kCAAf,SACI,mBAAGC,KAAK,KAAKD,UAAU,aAAvB,SAAqCD,S,cCOtCG,EATD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OACI,mBAAGH,UAAU,qBAAb,SAAmCG,KCqF5BC,EAxFI,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,iBAG5C,EAAgCC,oBAAS,GAAzC,mBAAQC,EAAR,KAAeC,EAAf,KAGQC,EAAiBN,EAAjBM,OAAQC,EAASP,EAATO,KAGVC,EAAe,SAAAC,GAEjBR,EAAgB,2BACTD,GADQ,kBAEVS,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAqBnC,OAEI,uBACIC,SApBa,SAAAJ,GACjBA,EAAEK,iBAGmB,KAAlBR,EAAOS,QAAiC,KAAhBR,EAAKQ,QAKhCV,GAAa,GAEbH,GAAiB,IANbG,GAAa,IAcjB,UAGKD,EAAQ,cAAC,EAAD,CAAON,QAAQ,kCAAqC,KAC7D,sBAAKH,UAAU,sBAAf,UACI,uBACIqB,KAAK,OACLL,KAAK,SACLM,GAAG,SACHL,MAAON,EACPY,SAAUV,IAEd,uBAAOW,QAAQ,SAAf,yBAGJ,sBAAKxB,UAAU,sBAAf,UACI,yBACIgB,KAAK,OACLM,GAAG,OACHL,MAAM,OACNM,SAAUV,EAJd,UAMI,wBAAQI,MAAO,GAAf,yCACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,4BACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,wBAEJ,uBAAOO,QAAQ,OAAf,0BAEJ,qBAAKxB,UAAU,sBAAf,SACI,uBACIqB,KAAK,SACLJ,MAAM,eACNjB,UAAU,uEC1CfyB,EAlCD,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAGJV,EAAeU,EAAfV,KAAMW,EAASD,EAATC,KAEd,IAAIX,EAAM,OAAO,KAGjB,IAAMY,EAAS,OAGf,OACI,qBAAK5B,UAAU,2BAAf,SACI,sBAAK6B,UAAU,aAAf,UACI,8CAAiBb,EAAjB,WACA,oBAAGhB,UAAU,cAAb,UACK8B,WAAYH,EAAKI,KAAOH,EAAQ,IAAII,QAAQ,GADjD,IACsD,+CAEtD,uDACKF,WAAYH,EAAKM,SAAWL,EAAQ,IAAII,QAAQ,GADrD,IAC0D,+CAE1D,uDACKF,WAAYH,EAAKO,SAAWN,EAAQ,IAAII,QAAQ,GADrD,IAC0D,qDCwD3DG,MA3Ef,WAGE,IAqCIC,EArCJ,EAAqC5B,mBAAS,CAC5CG,OAAQ,GACRC,KAAM,KAFR,mBAAOP,EAAP,KAAiBC,EAAjB,KAKA,EAAwCE,oBAAS,GAAjD,mBAAQ6B,EAAR,KAAmB9B,EAAnB,KACA,EAAwCC,mBAAS,IAAjD,mBAAQkB,EAAR,KAAmBY,EAAnB,KACA,EAAgC9B,oBAAS,GAAzC,mBAAQC,EAAR,KAAeC,EAAf,KAEQC,EAAiBN,EAAjBM,OAAQC,EAASP,EAATO,KAqChB,OAnCA2B,qBAAU,YACU,uCAAG,gCAAAC,EAAA,0DAEhBH,EAFgB,uBAGH,mCACRI,EAJW,4DAIgD9B,EAJhD,YAI0DC,EAJ1D,kBAGH,oCAHG,SAMO8B,MAAMD,GANb,cAMXE,EANW,gBAOOA,EAAUC,OAPjB,OAOXlB,EAPW,OASjBY,EAAiBZ,GACjBnB,GAAiB,GAGI,QAAlBmB,EAAUmB,IACXnC,GAAa,GAEbA,GAAa,GAhBE,4CAAH,qDAqBlBoC,KAEC,CAACT,IAIFD,EADC3B,EACY,cAAC,EAAD,CAAON,QAAQ,sBAEf,cAAC,EAAD,CACGuB,UAAWA,IAK3B,eAAC,WAAD,WACE,cAAC,EAAD,CACE3B,OAAO,qBAET,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEK,SAAUA,EACVC,gBAAiBA,EACjBC,iBAAkBA,MAGtB,qBAAKP,UAAU,aAAf,SACGoC,eC3DAW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bdc3ce30.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({titulo}) => {\n    return (  \n        <nav>\n            <div className=\"nav-wrapper light-blue darken-2\">\n                <a href=\"#!\" className=\"brand-logo\">{titulo}</a>\n            </div>\n        </nav>\n    );\n}\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\n \nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nconst Error = ({mensaje}) => {\n    return ( \n        <p className=\"red darken-4 error\">{mensaje}</p>\n     );\n}\n\nError.propTypes ={\n    mensaje: PropTypes.string.isRequired\n}\nexport default Error;","import React, { useState } from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) => {\n\n\n    const [ error, guardarError ] = useState(false);\n\n    //extraer ciudad y pais\n    const { ciudad, pais } = busqueda;\n\n    // funcion que coloca los elementos en el state\n    const handleChange = e => {\n        // Actualizar el state\n        guardarBusqueda({\n            ...busqueda,\n            [e.target.name] : e.target.value\n        });\n    }\n    // Cuando el usuario da submit al form\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        //validar\n        if(ciudad.trim() === '' || pais.trim() === ''){\n            guardarError(true);\n            return;\n        }\n\n        guardarError(false);\n\n        guardarConsultar(true);\n\n        // pasarlo al componente principal\n\n    }\n\n    return (  \n\n        <form\n            onSubmit={handleSubmit}\n        >\n            {error ? <Error mensaje=\"Ambos campos son obligatorios\" /> : null}\n            <div className=\"input-field col s12\">\n                <input \n                    type=\"text\"\n                    name=\"ciudad\"\n                    id=\"ciudad\"\n                    value={ciudad}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"ciudad\">Ciudad: </label>\n            </div>\n\n            <div className=\"input-field col s12\">\n                <select\n                    name=\"pais\"\n                    id=\"pais\"\n                    value=\"pais\"\n                    onChange={handleChange}\n                >\n                    <option value =\"\">-- Seleccione un país --</option>\n                    <option value=\"BO\">Bolivia</option>\n                    <option value=\"EC\">Ecuador</option>\n                    <option value=\"US\">Estados Unidos</option>\n                    <option value=\"MX\">México</option>\n                    <option value=\"AR\">Argentina</option>\n                    <option value=\"CO\">Colombia</option>\n                    <option value=\"CR\">Costa Rica</option>\n                    <option value=\"ES\">España</option>\n                    <option value=\"PE\">Perú</option>\n                </select>\n                <label htmlFor=\"pais\">País: </label>\n            </div>\n            <div className=\"input-field col s12\">\n                <input \n                    type=\"submit\"\n                    value=\"Buscar Clima\"\n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4\"\n                />\n            </div>\n        </form>\n    );\n}\n\nFormulario.propTypes = {\n    busqueda: PropTypes.object.isRequired,\n    guardarBusqueda: PropTypes.func.isRequired,\n    guardarConsultar: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clima = ({resultado}) => {\n\n    // Extraer los valores\n    const { name, main } = resultado;\n\n    if(!name) return null;\n\n    // grados kelvin\n    const kelvin = 273.15;\n\n\n    return ( \n        <div className=\"card-panel white col s12\">\n            <div classname=\"black-text\">\n                <h2>El clima de {name} es: </h2>\n                <p className=\"temperatura\">\n                    {parseFloat( main.temp - kelvin, 10).toFixed(2) } <span> &#x2103; </span>\n                </p>\n                <p>Temperatura Máxima:\n                    {parseFloat( main.temp_max - kelvin, 10).toFixed(2) } <span> &#x2103; </span>\n                </p>\n                <p>Temperatura Mínima:\n                    {parseFloat( main.temp_min - kelvin, 10).toFixed(2) } <span> &#x2103; </span>\n                </p>\n            </div>\n\n        </div>\n    );\n}\n\nClima.propTypes = {\n    resultado: PropTypes.object.isRequired\n}\n\nexport default Clima;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Clima from './components/Clima';\nimport Error from './components/Error';\n\nfunction App() {\n\n  // state formulario\n  const[ busqueda, guardarBusqueda ] = useState({\n    ciudad: '',\n    pais: ''\n  });\n\n  const [ consultar, guardarConsultar ] = useState(false);\n  const [ resultado, guardarResultado ] = useState({});\n  const [ error, guardarError ] = useState(false);\n\n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    const consultarAPI = async() => {\n\n      if(consultar){\n        const appId = '02afaf4de5994e8f630f14eef2d1a121';\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n  \n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n  \n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        // Detecta si hubo resultados correctos en la consulta\n        if(resultado.cod === \"404\"){\n          guardarError(true);\n        }else{\n          guardarError(false);\n        }\n      }\n\n    }\n    consultarAPI();\n    // eslint-disable-next-line\n  }, [consultar]);\n  \n  let componente;\n  if(error){\n    componente = <Error mensaje=\"No hay resultados\" />\n  } else {\n    componente = <Clima \n                    resultado={resultado}\n                 />\n  }\n\n  return (\n    <Fragment>\n      <Header \n        titulo='Cllima React App'\n      />\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario \n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">\n              {componente}\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}