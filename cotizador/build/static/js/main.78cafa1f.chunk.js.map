{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","propTypes","PropTypes","string","isRequired","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78cafa1f.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst ContenedorHeader = styled.header`\n    background-color: #26C6DA;\n    padding: 10px;\n    font-weight: bold;\n    color: #FFFFFF;\n`;\n\nconst TextoHeader = styled.h1`\n    font-size: 2rem;\n    margin: 0;\n    font-family: 'Slabo 27px', serif;\n    text-align: center;\n\n`;\n\nconst Header = ({titulo}) => {\n    return (  \n        <ContenedorHeader>\n            <TextoHeader>{titulo}</TextoHeader>\n        </ContenedorHeader>\n    );\n}\n \nexport default Header;","// obtiene la diferencia de años\nexport function obtenerDiferenciaYear(year){\n    return new Date().getFullYear() - year;\n}\n\n// calcula el total a pagar segun marca\n\nexport function calcularMarca(marca){\n    let incremento;\n\n    switch(marca){\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        default:\n            break;\n    }\n    return incremento;\n}\n\n// Calcular el tipo de seguro\nexport function obtenerPlan(plan){\n    return (plan === 'basico') ? 1.20 : 1.50;\n}\n\n// Muestra la primer letra mayuscula\nexport function primerMayuscula( texto){\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\n\n// Styled Components\nconst Campo = styled.div`\n    display: flex;\n    margin-bottom: 1rem;\n    align-items: center;\n`;\n\nconst Label = styled.label`\n    flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n    display: block;\n    width: 100%;\n    padding: 1rem;\n    border: 1px solid #e1e1e1;\n    --webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n    margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n    background-color: #00838F;\n    font-size: 16px;\n    width: 100%;\n    padding: 1rem;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    border: none;\n    transition: background-color .3s ease;\n    margin-top: 2rem;\n\n    &:hover {\n        background-color: #26C6DA;\n        cursor: pointer;\n    }\n`;\n\nconst Error = styled.div`\n    background-color: red;\n    color: white;\n    padding: 1rem;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 2rem;\n`;\n\n// Formulario\nconst Formulario = ({guardarResumen, guardarCargando}) => {\n\n    // Crear useState\n    const [ datos, guardarDatos ] = useState({\n        marca:'',\n        year:'',\n        plan:''\n    });\n    const [ error, guardarError ] = useState(false);\n\n    // Extraer los valores del state\n    const { marca, year, plan} = datos;\n\n    // Leer los datos del formulario y colorcarlos en el state\n    const obtenerInformacion = e => {\n        guardarDatos({\n            ...datos,\n            [e.target.name] : e.target.value\n        })\n    }\n    // Cuando el usuario presiona submit\n    const cotizarSeguro = e => {\n        e.preventDefault();\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\n            guardarError(true);\n            return;\n        }\n\n\n        guardarError(false);\n\n        // Una base de 2000\n        let resultado = 2000;\n\n\n        // Obtener la diferencia de años\n        const diferencia = obtenerDiferenciaYear(year);\n\n        // Por cada año hay que restar el 3%\n        resultado -= (( diferencia * 3 ) * resultado) / 100;\n\n        // Americano 15%\n        // Asiatico 5%\n        // Europeo 30%\n        resultado = calcularMarca(marca) * resultado;\n\n        // Basico aumenta 20%\n        // Completo 50%\n        const incrementoPlan = obtenerPlan(plan);\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n        guardarCargando(true);\n\n        setTimeout(() => {\n            // Elimina el spinner\n            guardarCargando(false);\n\n            // Pasa el Total al componente principal\n            guardarResumen({\n                cotizacion: Number(resultado),\n                datos\n        });\n        }, 3000);\n\n    }\n\n    return (  \n        <form\n            onSubmit={cotizarSeguro}\n        >\n            { error ? <Error>Todos los campos son obligatorios</Error> : null}\n\n            <Campo>\n                <Label>Marca</Label>\n                <Select\n                    name=\"marca\"\n                    value={marca}\n                    onChange={obtenerInformacion}\n                >\n                    <option value=\"\">--Seleccione</option>\n                    <option value=\"americano\">Americano</option>\n                    <option value=\"europeo\">Europeo</option>\n                    <option value=\"asiatico\">Asiatico</option>\n                </Select>\n            </Campo>\n\n            <Campo>\n                <Label>Año</Label>\n                <Select\n                    name=\"year\"\n                    value={year}\n                    onChange={obtenerInformacion}\n                >\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                </Select>\n            </Campo>\n\n            <Campo>\n                <Label>Plan</Label>\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"basico\"\n                    checked={plan === \"basico\"}\n                    onChange={obtenerInformacion}\n                /> Básico\n\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"completo\"\n                    checked={plan === \"completo\"}\n                    onChange={obtenerInformacion}\n                /> Completo\n            </Campo>\n\n            <Boton type=\"submit\">Cotizar</Boton>\n        </form>\n    );\n}\n\nFormulario.propTypes = {\n    guardarResumen: PropTypes.func.isRequired,\n    guardarCargando: PropTypes.func.isRequired\n}\n\nexport default Formulario;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { primerMayuscula } from '../helper';\nimport PropTypes from 'prop-types';\n\nconst ContenedorResumen = styled.div`\n    padding: 1rem;\n    text-align: center;\n    background-color: #00838F;\n    color: #fff;\n    margin-top: 1rem;\n`;\n\nconst Resumen = ({datos}) => {\n\n    // extraer de datos\n    const { marca, year, plan } = datos;\n\n    if (marca === '' || year === ''|| plan === '' ) return null;\n\n    return (\n\n        <ContenedorResumen>\n\n            <h2>Resumen de Cotización</h2>\n            <ul>\n                <li>Marca: {primerMayuscula(marca)}</li>\n                <li>Plan: {primerMayuscula(plan)}</li>\n                <li>Año: {year}</li>\n            </ul>\n        </ContenedorResumen>\n        \n     );\n}\n\nResumen.propTypes = {\n    datos: PropTypes.object.isRequired\n}\nexport default Resumen;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nconst Mensaje = styled.p`\n    background-color: rgb(127, 224, 237);\n    margin-top: 2rem;\n    padding: 1rem;\n    text-align: center;\n`;\n\nconst ResultadoCotizacion = styled.div`\n    text-align: center;\n    padding: .5rem;\n    border: 1px solid #26C6DA;\n    background-color: rgb(127, 224, 237);\n    margin-top: 1rem;\n    position: relative;\n`;\n\nconst TextoCotizacion = styled.p`\n    color: #00838F;\n    padding: 1rem;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin: 0;\n`;\n\nconst Resultado = ({cotizacion}) => {\n\n    return ( \n        (cotizacion === 0) \n        ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje> \n        : (\n            <ResultadoCotizacion>\n                <TransitionGroup\n                    component=\"span\"\n                    className=\"resultado\"\n                >\n                    <CSSTransition\n                        classNames=\"resultado\"\n                        key={cotizacion}\n                        timeout={{ enter: 500, exit: 500 }}\n                    >\n                    <TextoCotizacion>El Total es: $ <span> {cotizacion} </span></TextoCotizacion>\n                    </CSSTransition>\n                </TransitionGroup>\n            </ResultadoCotizacion>\n        )\n    );\n}\nResultado.propTypes = {\n    cotizacion: PropTypes.number.isRequired\n}\nexport default Resultado;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return (  \n        <div className=\"spinner\">\n        <div className=\"dot1\"></div>\n        <div className=\"dot2\"></div>\n        </div>\n    );\n}\n \nexport default Spinner;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Resumen from './components/Resumen';\nimport Resultado from './components/Resultado';\nimport Spinner from './components/Spinner';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFFFFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  const [ resumen, guardarResumen ] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [ cargando, guardarCargando ] = useState(false);\n\n  //extraer datos\n  const { cotizacion, datos } = resumen;\n\n  return (\n    <Contenedor>\n        <Header \n          titulo=\"Cotizador de Seguros\"\n        />\n\n        <ContenedorFormulario>\n          <Formulario \n            guardarResumen={guardarResumen}\n            guardarCargando={guardarCargando}\n          />\n          \n          { cargando ? <Spinner /> : null}\n\n          <Resumen \n            datos={datos}\n          />\n\n          { !cargando\n          ?\n          <Resultado \n          cotizacion={cotizacion}\n        />\n        : null\n          }\n\n        </ContenedorFormulario>\n\n    </Contenedor>\n   \n  );\n}\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}