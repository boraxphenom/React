{"version":3,"sources":["components/Error.jsx","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","console","log","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67680798.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Error = ({mensaje}) =>  ( \n        <p className=\"alert alert-danger error\">{mensaje}</p>\n     );\n\nError.propTypes = {\n        mensaje: PropTypes.string.isRequired\n}\n\nexport default Error;","import React, { Fragment, useState } from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\n\nconst Pregunta = ({ guardarPresupuesto, guardarRestante, actualizarPregunta }) => {\n\n    //Definir el state\n    const[ cantidad, guardarCantidad ] = useState(0);\n    const [ error, guardarError ] = useState(false);\n\n    //Funcion que lee el presupuesto\n    const definirPresupuesto = e => {\n        guardarCantidad(parseInt(e.target.value, 10))\n    }\n\n    //Submitt para definir el presupuesto\n    const agregarPresupuesto = e => {\n        e.preventDefault();\n\n        // Validar\n        if(cantidad < 1 || isNaN( cantidad )){\n            guardarError(true);\n            return;\n        }\n\n        // si se pasa la validacion\n        guardarError(false);\n        guardarPresupuesto(cantidad);\n        guardarRestante(cantidad);\n        actualizarPregunta(false);\n    }\n\n\n    return (  \n        <Fragment>\n            <h2>Coloca tu Presupuesto</h2>\n            { error ? <Error mensaje=\"El presupuesto es Incorrecto\" /> : null}\n\n            <form\n                onSubmit={agregarPresupuesto}\n            >\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca tu Presupuesto\"\n                    onChange={definirPresupuesto}\n                />\n                <input  \n                    type=\"submit\"\n                    className=\"button-primary u-full-width\"\n                    value=\"Definir Presuppuesto\"\n\n                />\n            </form>\n        </Fragment>\n\n    );\n}\n\nPregunta.propTypes = {\n    guardarPresupuesto: PropTypes.func.isRequired,\n    guardarRestante: PropTypes.func.isRequired,\n    actualizarPregunta: PropTypes.func.isRequired\n}\n\nexport default Pregunta;","import React, { useState } from 'react';\nimport Error from './Error';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\n\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\n\n    // Definir state\n    const [ nombre, guardarNombre ] = useState('');\n    const [ cantidad, guardarCantidad ] = useState(0);\n    const [ error, guardarError ] = useState(false);\n\n\n    // cuando el usuario agrega un gasto\n    const agregarGasto = e => {\n        e.preventDefault();\n\n        // validar\n        if(cantidad < 1 || isNaN( cantidad) || nombre.trim() === ''){\n            guardarError(true);\n            return;\n        }\n        guardarError(false);\n\n        // construir el gasto\n        const gasto = {\n            nombre,\n            cantidad,\n            id: shortid.generate()\n        }\n\n        console.log(gasto);\n\n        // pasar el gasto al componente principal\n        guardarGasto(gasto);\n        guardarCrearGasto(true);\n\n        // resetear el form\n        guardarNombre('');\n        guardarCantidad(0);\n\n    }\n\n    return ( \n        <form\n            onSubmit={agregarGasto}\n        >\n            <h2>Agrega tus gastos aqu√≠</h2>\n\n            { error ? <Error mensaje=\"Ambos campos son obligatorios o presupuesto incorrecto\" /> : null }\n            <div className=\"campo\">\n                <label>Nombre Gasto</label>\n                <input \n                    type=\"text\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. Transporte\"\n                    value={nombre}\n                    onChange={e => guardarNombre(e.target.value)}\n\n                />\n            </div>\n\n            <div className=\"campo\">\n                <label>Cantidad Gasto</label>\n                <input \n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. 300\"\n                    value={cantidad}\n                    onChange={e => guardarCantidad(parseInt( e.target.value, 10))}\n                />\n            </div>\n\n            <input\n                type=\"submit\"\n                className=\"button u-full-width\"\n                value=\"Agregar Gasto\"\n            />\n        </form> \n\n    );\n}\n\nFormulario.propTypes = {\n    guardarGasto: PropTypes.func.isRequired,\n    guardarCrearGasto: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Gasto = ({gasto}) => (  \n    <li className=\"gastos\">\n        <p>\n            {gasto.nombre}\n\n            <span className=\"gasto\">$ {gasto.cantidad} </span>\n        </p>\n    </li>\n);\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired\n}\n \nexport default Gasto;","import React from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nconst Listado = ({gastos}) => (  \n<div className=\"gastos-realizados\">\n    <h2>Listado</h2>\n    {gastos.map(gasto => (\n        <Gasto\n            key={gasto.id}\n            gasto={gasto}\n        />\n    ))}\n</div>\n\n);\n\nListado.propTypes = {\n    gastos: PropTypes.array.isRequired\n}\n \nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\n    let clase;\n    \n    if( (presupuesto / 4) > restante){\n        clase = 'alert alert-danger';\n    } else if( (presupuesto / 2) > restante){\n        clase = 'alert alert-warning';\n    } else {\n        clase = 'alert alert-success';\n    }\n\n    return clase;\n}","import React, { Fragment } from 'react';\nimport { revisarPresupuesto } from '../helpers';\nimport PropTypes from 'prop-types';\n\nconst ControlPresupuesto = ({presupuesto, restante}) => {\n    return (  \n        <Fragment>\n            <div className=\"alert alert-primary\">\n                Presupuesto: $ {presupuesto}\n            </div>\n            <div className={revisarPresupuesto(presupuesto, restante)}>\n                Restante: $ {restante}\n            </div>\n\n        </Fragment>\n    );\n}\n\nControlPresupuesto.propTypes = {\n    presupesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired\n}\n\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  // Definir el state\n  const [ presupuesto, guardarPresupuesto ] = useState(0);\n  const [ restante, guardarRestante ] = useState(0);\n  const [ mostrarpregunta, actualizarPregunta ] = useState(true);\n  const [ gastos, guardarGastos ] = useState([]);\n  const [ gasto, guardarGasto ] = useState({});\n  const [ creargasto, guardarCrearGasto ] = useState(false);\n\n  // useEffect que actualiza el restante\n\n  useEffect(() => {\n    if(creargasto){\n\n      // agrega el nuevo presupuesto\n      guardarGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      // resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n      // resetear a false\n      guardarCrearGasto(false);\n    }\n  }, [gasto, creargasto, gastos, restante]);\n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n        {\n          mostrarpregunta ?\n          (\n            <Pregunta \n            guardarPresupuesto={guardarPresupuesto}\n            guardarRestante={guardarRestante}\n            actualizarPregunta={actualizarPregunta}\n          />\n          ) : (\n            <div className=\"row\">\n            <div className=\"one-half column\">\n              <Formulario \n                guardarGasto={guardarGasto}\n                guardarCrearGasto={guardarCrearGasto}\n              />\n            </div>\n\n            <div className=\"one-half column\">\n              <Listado \n                gastos={gastos}\n              />\n              <ControlPresupuesto \n                presupuesto={presupuesto}\n                restante={restante}\n              />\n            </div>\n          </div>\n          )\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}