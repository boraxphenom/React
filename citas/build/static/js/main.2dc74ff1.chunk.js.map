{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","type","placeholder","onChange","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guuardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dc74ff1.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({crearCita}) => {\n\n    // Crear State de Citas\n\n    const [cita, actualizarCita] = useState({\n        mascota: '',\n        propietario: '',\n        fecha: '',\n        hora: '',\n        sintomas: ''\n    });\n\n    // Crear State errores\n\n    const [ error, actualizarError ] = useState(false)\n\n    //Funcion que se ejecuta cada que el usuario escribe en un input\n\n    const actualizarState = e => {\n        actualizarCita({\n            ...cita,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    //Extraer los valores\n    const {mascota, propietario, fecha, hora, sintomas} = cita;\n\n    //Cuando el usuario presion agregar cita\n    const submitCita = e => {\n        e.preventDefault();\n\n        // Validar\n        if(mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' ||\n        hora.trim() === '' || sintomas.trim() === '' ){\n            actualizarError(true);\n            return;\n        }\n        // Eliminar el mensajje previo\n        actualizarError(false);\n\n        // Asignar un ID\n        cita.id = uuidv4();\n        \n        // Crear la cta\n        crearCita(cita);\n\n        // Reiniciar el form\n        actualizarCita({\n            mascota: '',\n            propietario: '',\n            fecha: '',\n            hora: '',\n            sintomas: ''\n        });\n\n    }\n\n    return (  \n        <Fragment>\n            <h2>Crear Cita</h2>\n\n            { error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null}\n        \n            <form\n                onSubmit={submitCita}\n            >\n                <label>Nombre Mascota</label>\n                <input\n                    type=\"text\"\n                    name=\"mascota\"\n                    className=\"u-full-width\"\n                    placeholder=\"Nombre Mascota\"\n                    onChange={actualizarState}\n                    value={mascota}\n                />\n\n                <label>Nombre Dueño</label>\n                <input\n                    type=\"text\"\n                    name=\"propietario\"\n                    className=\"u-full-width\"\n                    placeholder=\"Nombre Dueño de la mscota\"\n                    onChange={actualizarState}\n                    value={propietario}\n                />\n\n                <label>Fecha</label>\n                <input\n                    type=\"date\"\n                    name=\"fecha\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={fecha}\n                />\n\n                <label>Hora</label>\n                <input\n                    type=\"time\"\n                    name=\"hora\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={hora}\n                />\n\n                <label>Síntomas</label>\n                <textarea\n                    className=\"u-full-width\"\n                    name=\"sintomas\"\n                    onChange={actualizarState}\n                    value={sintomas}\n                ></textarea>\n\n                <button\n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                >Agregar Cita</button>\n            </form>\n        </Fragment>\n    );\n}\n\nFormulario.propTypes ={\n    crearCita: PropTypes.func.isRequired\n}\nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cita = ({cita, eliminarCita}) => (  \n    <div className=\"cita\">\n        <p>Macota: <span>{cita.mascota}</span></p>\n        <p>Dueño: <span>{cita.propietario}</span></p>\n        <p>Fecha: <span>{cita.fecha}</span></p>\n        <p>Hora: <span>{cita.hora}</span></p>\n        <p>Sintomas: <span>{cita.sintomas}</span></p>\n\n        <button\n            className=\"button eliminar u-full-width\"\n            onClick={ () => eliminarCita(cita.id)}\n        >Eliminar &times;</button>\n    </div>\n);\n\nCita.propTypes = {\n    cita: PropTypes.object.isRequired,\n    eliminarCita: PropTypes.func.isRequired\n}\nexport default Cita;","import React, { Fragment, useState, useEffect } from 'react';\nimport Formulario from './components/Formulario';\nimport Cita from './components/Cita';\n\nfunction App() {\n\n  // Citas en local storage\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if(!citasIniciales){\n    citasIniciales = [];\n  }\n  // Arreglo de citas\n  const [citas, guuardarCitas] = useState(citasIniciales);\n\n  // Use Effect para realizar ciertas operaciones cuando el state cambia\n  useEffect( () => {\n    let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n    if(citasIniciales){\n      localStorage.setItem('citas', JSON.stringify(citas))\n    }else{\n      localStorage.setItem('citas', JSON.stringify([]));\n    }\n  },[citas] );\n\n  // Funcion que tome las citas actuales y agregue la nueva\n  const crearCita = cita => {\n    guuardarCitas([\n      ...citas,\n      cita\n    ]);\n  }\n\n  // Funcion que elimina una cita por su id\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter(cita => cita.id !== id);\n    guuardarCitas(nuevasCitas);\n  }\n\n  // Mensaje condicional\n  const titulo = citas.length === 0 ? 'No hay citas' : 'Administra tus citas'\n\n\n  return (\n    <Fragment>\n    <h1>Administrador de Pacientes</h1>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"one-half column\">\n          <Formulario \n            crearCita={crearCita}\n          />\n        </div>\n        <div className=\"one-half column\">\n          <h2>{titulo}</h2>\n          {citas.map(cita => (\n            <Cita\n            key={cita.id}  \n            cita={cita}\n            eliminarCita={eliminarCita}\n            />\n\n          ))}\n        </div>\n      </div>\n    </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}